#include <mach/mt_typedefs.h>

#define TEMPERATURE_T0                  110
#define TEMPERATURE_T1                  0
#define TEMPERATURE_T2                  25
#define TEMPERATURE_T3                  50
#define TEMPERATURE_T                   255 // This should be fixed, never change the value

#define FG_METER_RESISTANCE 	0

#define MAX_BOOTING_TIME_FGCURRENT	1*10 // 10s

#if defined(CONFIG_POWER_EXT)
#define OCV_BOARD_COMPESATE	72 //mV 
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
#else
#define OCV_BOARD_COMPESATE	0 //mV 
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
#endif

//BEGIN<20120117>wangyanhui
#define Q_MAX_POS_50	2106   //2524  
#define Q_MAX_POS_25	2103   //2524  
#define Q_MAX_POS_0		1636   //2524  
#define Q_MAX_NEG_10	1632   //2524   

#define Q_MAX_POS_50_H_CURRENT	2032 //2486  
#define Q_MAX_POS_25_H_CURRENT	2026 //1880 //2486  
#define Q_MAX_POS_0_H_CURRENT	  1531 //2486  
#define Q_MAX_NEG_10_H_CURRENT	1338  //2486  
//END<20120117>wangyanhui

#define R_FG_VALUE 				20 // mOhm, base is 20
#define CURRENT_DETECT_R_FG	10 //10 //  //1mA  //LINE<20120117>wangyanhui     

#define OSR_SELECT_7			0

#define CAR_TUNE_VALUE			91 //100 //93 ///1.00  //LINE<20120117>wangyanhui     

/////////////////////////////////////////////////////////////////////
// <DOD, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[] =
{
//DOD0  OCV -10
	{0 , 4172},
	{2 , 4153},
	{3 , 4132},
	{5 , 4102},
	{7 , 4075},
	{8 , 4055},
	{10 , 4036},
	{12 , 4018},
	{13 , 4003},
	{15 , 3991},
	{16 , 3982},
	{18 , 3972},
	{20 , 3963},
	{21 , 3953},
	{23 , 3943},
	{25 , 3933},
	{26 , 3922},
	{28 , 3911},
	{30 , 3900},
	{31 , 3889},
	{33 , 3878},
	{35 , 3868},
	{36 , 3859},
	{38 , 3850},
	{39 , 3842},
	{41 , 3836},
	{43 , 3829},
	{44 , 3824},
	{46 , 3818},
	{47 , 3815},
	{48 , 3813},
	{49 , 3809},
	{51 , 3804},
	{53 , 3800},
	{54 , 3797},
	{56 , 3793},
	{58 , 3790},
	{59 , 3786},
	{61 , 3784},
	{63 , 3781},
	{64 , 3779},
	{66 , 3777},
	{67 , 3774},
	{69 , 3771},
	{71 , 3768},
	{72 , 3765},
	{74 , 3761},
	{76 , 3756},
	{77 , 3751},
	{79 , 3746},
	{80 , 3743},
	{81 , 3740},
	{82 , 3734},
	{84 , 3726},
	{86 , 3717},
	{87 , 3710},
	{89 , 3703},
	{90 , 3697},
	{92 , 3689},
	{93 , 3680},
	{94 , 3672},
	{95 , 3639},
	{97 , 3582},
	{99 , 3498},
	{100 , 3407},
	{100 , 3350}

};      
        
// T1 0C 
BATTERY_PROFILE_STRUC battery_profile_t1[] =
{
	//DOD0	OCV 0
		{0 , 4169},
	{2 , 4142},
	{3 , 4122},
	{5 , 4104},
	{6 , 4089},
	{8 , 4076},
	{9 , 4064},
	{11 , 4049},
	{12 , 4033},
	{14 , 4019},
	{15 , 4008},
	{17 , 3998},
	{18 , 3988},
	{20 , 3979},
	{21 , 3971},
	{23 , 3961},
	{24 , 3952},
	{26 , 3943},
	{27 , 3934},
	{29 , 3925},
	{30 , 3915},
	{32 , 3905},
	{33 , 3895},
	{35 , 3883},
	{36 , 3872},
	{38 , 3862},
	{39 , 3852},
	{41 , 3844},
	{42 , 3837},
	{44 , 3830},
	{45 , 3825},
	{47 , 3819},
	{48 , 3814},
	{50 , 3810},
	{51 , 3805},
	{53 , 3802},
	{54 , 3798},
	{57 , 3791},
	{59 , 3789},
	{60 , 3786},
	{62 , 3783},
	{65 , 3779},
	{66 , 3777},
	{69 , 3773},
	{71 , 3770},
	{72 , 3767},
	{74 , 3763},
	{75 , 3759},
	{77 , 3755},
	{78 , 3751},
	{80 , 3746},
	{81 , 3740},
	{83 , 3734},
	{84 , 3728},
	{86 , 3721},
	{87 , 3712},
	{89 , 3703},
	{90 , 3697},
	{92 , 3693},
	{93 , 3686},
	{95 , 3672},
	{96 , 3632},
	{98 , 3566},
	{99 , 3474},
	{100 , 3460},
	{100 , 3331}

};           

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[] =
{
	//DOD0	OCV 25	
	{0 , 4190},
	{1 , 4174},
	{3 , 4158},
	{4 , 4144},
	{6 , 4130},
	{7 , 4117},
	{9 , 4104},
	{10 , 4091},
	{11 , 4078},
	{13 , 4066},
	{14 , 4054},
	{16 , 4042},
	{17 , 4030},
	{19 , 4018},
	{20 , 4008},
	{21 , 3997},
	{23 , 3987},
	{24 , 3977},
	{26 , 3968},
	{27 , 3958},
	{28 , 3949},
	{30 , 3940},
	{31 , 3931},
	{33 , 3922},
	{34 , 3913},
	{36 , 3903},
	{37 , 3892},
	{38 , 3880},
	{40 , 3868},
	{41 , 3857},
	{43 , 3849},
	{44 , 3841},
	{46 , 3834},
	{47 , 3828},
	{48 , 3822},
	{50 , 3817},
	{51 , 3812},
	{54 , 3803},
	{56 , 3799},
	{58 , 3792},
	{60 , 3789},
	{63 , 3783},
	{64 , 3781},
	{67 , 3776},
	{68 , 3773},
	{70 , 3769},
	{71 , 3764},
	{73 , 3758},
	{74 , 3753},
	{75 , 3748},
	{77 , 3743},
	{78 , 3738},
	{81 , 3730},
	{83 , 3724},
	{84 , 3717},
	{85 , 3711},
	{87 , 3704},
	{88 , 3696},
	{90 , 3687},
	{93 , 3680},
	{94 , 3673},
	{95 , 3652},
	{97 , 3604},
	{98 , 3536},
	{100 , 3436},
	{100 , 3368}
};     

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[] =
{
	//DOD0	OCV 50	
	{0 , 4191},
	{1 , 4175},
	{3 , 4159},
	{4 , 4145},
	{6 , 4131},
	{7 , 4117},
	{9 , 4104},
	{10 , 4090},
	{12 , 4078},
	{13 , 4065},
	{15 , 4053},
	{16 , 4041},
	{18 , 4029},
	{19 , 4017},
	{21 , 4006},
	{22 , 3995},
	{24 , 3984},
	{25 , 3974},
	{27 , 3964},
	{28 , 3954},
	{30 , 3944},
	{31 , 3935},
	{33 , 3925},
	{34 , 3916},
	{36 , 3906},
	{37 , 3896},
	{39 , 3885},
	{40 , 3873},
	{42 , 3862},
	{43 , 3853},
	{45 , 3845},
	{46 , 3838},
	{48 , 3831},
	{49 , 3825},
	{50 , 3819},
	{52 , 3814},
	{53 , 3809},
	{56 , 3800},
	{58 , 3795},
	{59 , 3791},
	{62 , 3783},
	{64 , 3780},
	{65 , 3776},
	{68 , 3768},
	{70 , 3761},
	{71 , 3751},
	{73 , 3744},
	{74 , 3738},
	{76 , 3732},
	{77 , 3727},
	{80 , 3718},
	{82 , 3712},
	{83 , 3705},
	{85 , 3698},
	{86 , 3692},
	{88 , 3684},
	{89 , 3675},
	{91 , 3672},
	{92 , 3668},
	{94 , 3663},
	{95 , 3648},
	{96 , 3605},
	{98 , 3543},
	{99 , 3454},
	{100 , 3430},
	{100 , 3330}

};           

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },          
  {0  , 0 },
  {0  , 0 },
  {0  , 0 },
  {0  , 0 },
  {0  , 0 },
  {0  , 0 },
	{0  , 0 }	   
};      

/////////////////////////////////////////////////////////////////////
// <Rbat, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

// T0 -10C
R_PROFILE_STRUC r_profile_t0[] =
{
	//DOD0	R -10
	{348 , 4172},
	{348 , 4153},
	{356 , 4132},
	{374 , 4102},
	{416 , 4075},
	{446 , 4055},
	{464 , 4036},
	{485 , 4018},
	{507 , 4003},
	{524 , 3991},
	{536 , 3982},
	{543 , 3972},
	{546 , 3963},
	{548 , 3953},
	{548 , 3943},
	{549 , 3933},
	{549 , 3922},
	{547 , 3911},
	{546 , 3900},
	{541 , 3889},
	{540 , 3878},
	{538 , 3868},
	{536 , 3859},
	{536 , 3850},
	{537 , 3842},
	{541 , 3836},
	{541 , 3829},
	{544 , 3824},
	{548 , 3818},
	{550 , 3815},
	{553 , 3813},
	{554 , 3809},
	{560 , 3804},
	{562 , 3800},
	{566 , 3797},
	{571 , 3793},
	{574 , 3790},
	{575 , 3786},
	{581 , 3784},
	{583 , 3781},
	{584 , 3779},
	{586 , 3777},
	{593 , 3774},
	{591 , 3771},
	{596 , 3768},
	{597 , 3765},
	{598 , 3761},
	{601 , 3756},
	{605 , 3751},
	{610 , 3746},
	{612 , 3743},
	{615 , 3740},
	{621 , 3734},
	{627 , 3726},
	{638 , 3717},
	{655 , 3710},
	{683 , 3703},
	{725 , 3697},
	{787 , 3689},
	{827 , 3680},
	{867 , 3672},
	{973 , 3639},
	{1124 , 3582},
	{1402 , 3498},
	{1647 , 3407},
	{1499 , 3350}

};              

// T1 0C
R_PROFILE_STRUC r_profile_t1[] =
{
	//DOD0	R 0
	{262 , 4169},
	{262 , 4142},
	{275 , 4122},
	{286 , 4104},
	{295 , 4089},
	{301 , 4076},
	{306 , 4064},
	{308 , 4049},
	{310 , 4033},
	{314 , 4019},
	{317 , 4008},
	{320 , 3998},
	{322 , 3988},
	{325 , 3979},
	{328 , 3971},
	{330 , 3961},
	{331 , 3952},
	{333 , 3943},
	{334 , 3934},
	{334 , 3925},
	{333 , 3915},
	{331 , 3905},
	{326 , 3895},
	{320 , 3883},
	{313 , 3872},
	{308 , 3862},
	{304 , 3852},
	{303 , 3844},
	{302 , 3837},
	{303 , 3830},
	{303 , 3825},
	{304 , 3819},
	{305 , 3814},
	{306 , 3810},
	{309 , 3805},
	{311 , 3802},
	{312 , 3798},
	{316 , 3791},
	{318 , 3789},
	{319 , 3786},
	{321 , 3783},
	{323 , 3779},
	{325 , 3777},
	{324 , 3773},
	{323 , 3770},
	{323 , 3767},
	{322 , 3763},
	{322 , 3759},
	{323 , 3755},
	{324 , 3751},
	{326 , 3746},
	{326 , 3740},
	{328 , 3734},
	{330 , 3728},
	{333 , 3721},
	{332 , 3712},
	{333 , 3703},
	{342 , 3697},
	{359 , 3693},
	{386 , 3686},
	{424 , 3672},
	{460 , 3632},
	{553 , 3566},
	{789 , 3474},
	{1000 , 3460},
	{1458 , 3331}

}; 

// T2 25C
R_PROFILE_STRUC r_profile_t2[] =
{
	//DOD0	R 25
	
	{160 , 4190},
	{160 , 4174},
	{161 , 4158},
	{161 , 4144},
	{162 , 4130},
	{164 , 4117},
	{165 , 4104},
	{164 , 4091},
	{164 , 4078},
	{140 , 4066},
	{169 , 4054},
	{170 , 4042},
	{169 , 4030},
	{169 , 4018},
	{171 , 4008},
	{175 , 3997},
	{176 , 3987},
	{177 , 3977},
	{178 , 3968},
	{182 , 3958},
	{184 , 3949},
	{186 , 3940},
	{187 , 3931},
	{187 , 3922},
	{188 , 3913},
	{187 , 3903},
	{184 , 3892},
	{177 , 3880},
	{169 , 3868},
	{163 , 3857},
	{160 , 3849},
	{160 , 3841},
	{159 , 3834},
	{159 , 3828},
	{159 , 3822},
	{159 , 3817},
	{159 , 3812},
	{160 , 3803},
	{161 , 3799},
	{160 , 3792},
	{161 , 3789},
	{164 , 3783},
	{167 , 3781},
	{168 , 3776},
	{168 , 3773},
	{166 , 3769},
	{161 , 3764},
	{159 , 3758},
	{157 , 3753},
	{157 , 3748},
	{157 , 3743},
	{157 , 3738},
	{161 , 3730},
	{160 , 3724},
	{159 , 3717},
	{161 , 3711},
	{163 , 3704},
	{164 , 3696},
	{162 , 3687},
	{171 , 3680},
	{177 , 3673},
	{177 , 3652},
	{182 , 3604},
	{196 , 3536},
	{223 , 3436},
	{307 , 3368}

};

// T3 50C
R_PROFILE_STRUC r_profile_t3[] =
{
	//DOD0	R 50
{129 , 4191},
	{129 , 4175},
	{129 , 4159},
	{130 , 4145},
	{130 , 4131},
	{131 , 4117},
	{132 , 4104},
	{132 , 4090},
	{133 , 4078},
	{133 , 4065},
	{134 , 4053},
	{135 , 4041},
	{136 , 4029},
	{136 , 4017},
	{137 , 4006},
	{138 , 3995},
	{139 , 3984},
	{140 , 3974},
	{142 , 3964},
	{143 , 3954},
	{144 , 3944},
	{146 , 3935},
	{147 , 3925},
	{148 , 3916},
	{149 , 3906},
	{148 , 3896},
	{145 , 3885},
	{140 , 3873},
	{137 , 3862},
	{135 , 3853},
	{134 , 3845},
	{134 , 3838},
	{134 , 3831},
	{134 , 3825},
	{134 , 3819},
	{135 , 3814},
	{135 , 3809},
	{137 , 3800},
	{138 , 3795},
	{139 , 3791},
	{141 , 3783},
	{142 , 3780},
	{144 , 3776},
	{144 , 3768},
	{137 , 3761},
	{133 , 3751},
	{133 , 3744},
	{133 , 3738},
	{133 , 3732},
	{133 , 3727},
	{135 , 3718},
	{135 , 3712},
	{134 , 3705},
	{134 , 3698},
	{135 , 3692},
	{135 , 3684},
	{134 , 3675},
	{136 , 3672},
	{139 , 3668},
	{144 , 3663},
	{147 , 3648},
	{146 , 3605},
	{147 , 3543},
	{150 , 3454},
	{160 , 3430},
	{167 , 3330}
};

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },         
	{0  , 0 },          
  {0  , 0 },
  {0  , 0 },
  {0  , 0 },
  {0  , 0 },
	{0  , 0 }	   
};     


int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);

//#define CONFIG_POWER_VERIFY
